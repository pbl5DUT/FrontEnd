"use client";

import React, { useState, useEffect } from 'react';
import { useRouter } from 'next/navigation'; // S·ª≠ d·ª•ng useRouter ƒë·ªÉ ƒëi·ªÅu h∆∞·ªõng
import './ProjectManagement.css'; // Import file CSS

const ProjectManagement = () => {

    type Project = {
        project_name: string;
        description: string;
        status: string;
        start_date: string;
        end_date: string;
        manager: number;
    };

    const router = useRouter(); // Kh·ªüi t·∫°o hook ƒëi·ªÅu h∆∞·ªõng
    const [projects, setProjects] = useState<Project[]>([]); 
    const [searchTerm, setSearchTerm] = useState(''); // State cho t·ª´ kh√≥a t√¨m ki·∫øm
    const [searchQuery, setSearchQuery] = useState(''); // State cho t·ª´ kh√≥a khi b·∫•m n√∫t t√¨m ki·∫øm

    // H√†m l·∫•y d·ªØ li·ªáu t·ª´ API s·ª≠ d·ª•ng JSON
    useEffect(() => {
        const fetchProjects = async () => {
            try {
                const response = await fetch('https://backend-pbl5-134t.onrender.com/api/projects/', {
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                const data = await response.json(); // Chuy·ªÉn ƒë·ªïi d·ªØ li·ªáu nh·∫≠n ƒë∆∞·ª£c sang JSON
                setProjects(data); // L∆∞u d·ªØ li·ªáu d·ª± √°n v√†o state
            } catch (error) {
                console.error('L·ªói khi l·∫•y d·ªØ li·ªáu d·ª± √°n:', error);
            }
        };
        fetchProjects();
    }, []); // Ch·ªâ ch·∫°y 1 l·∫ßn khi component ƒë∆∞·ª£c mount

    const handleCreateProject = () => {
        router.push('./createProject'); // ƒêi·ªÅu h∆∞·ªõng ƒë·∫øn trang t·∫°o d·ª± √°n
    };

    const handleViewProjectDetail = (projectName : string) => {
        router.push(`/projects/${projectName}`); // ƒêi·ªÅu h∆∞·ªõng ƒë·∫øn trang chi ti·∫øt d·ª± √°n
    };

    // H√†m x·ª≠ l√Ω x√≥a d·ª± √°n
    const handleDeleteProject = async (projectName : string) => {
        const confirmed = window.confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a d·ª± √°n n√†y kh√¥ng?");
        if (!confirmed) return;

        try {
            const response = await fetch(`https://backend-pbl5-134t.onrender.com/api/projects/${projectName}/`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                },
            });

            if (response.ok) {
                setProjects(projects.filter(project => project.project_name !== projectName));
            } else {
                throw new Error('L·ªói khi x√≥a d·ª± √°n');
            }
        } catch (error) {
            console.error('L·ªói khi x√≥a d·ª± √°n:', error);
        }
    };

    // L·ªçc danh s√°ch d·ª± √°n theo nhi·ªÅu thu·ªôc t√≠nh
    const filteredProjects = projects.filter(project =>
        (project.project_name && project.project_name.toLowerCase().includes(searchQuery.toLowerCase())) || 
        (project.status && project.status.toLowerCase().includes(searchQuery.toLowerCase())) || 
        (project.manager && project.manager.toString().includes(searchQuery)) ||
        (project.start_date && project.start_date.toLowerCase().includes(searchQuery.toLowerCase())) ||
        (project.end_date && project.end_date.toLowerCase().includes(searchQuery.toLowerCase()))
    );

    const handleSearch = () => {
        setSearchQuery(searchTerm); // C·∫≠p nh·∫≠t t·ª´ kh√≥a t√¨m ki·∫øm khi b·∫•m n√∫t
    };

    return (
        <div className="project-management-container">
            <div className="header">
                <button className="create-project-btn" onClick={handleCreateProject}>
                    T·∫°o d·ª± √°n m·ªõi
                </button>
                <input
                    className="search-input"
                    type="text"
                    placeholder="T√¨m ki·∫øm"
                    value={searchTerm}
                    onChange={(e) => setSearchTerm(e.target.value)} // C·∫≠p nh·∫≠t gi√° tr·ªã input khi ng∆∞·ªùi d√πng nh·∫≠p
                />
                <button className="search-btn" onClick={handleSearch}>
                    T√¨m ki·∫øm
                </button>
            </div>
            <table className="project-table">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>D·ª± √°n</th>
                        <th>M√¥ t·∫£</th>
                        <th>Th·ªùi gian</th>
                        <th>Ti·∫øn ƒë·ªô</th>
                        <th>Qu·∫£n l√Ω</th>
                        <th>H√†nh ƒë·ªông</th>
                    </tr>
                </thead>
                <tbody>
                    {filteredProjects.map((project, index) => (
                        <tr key={project.project_name || index}>
                            <td>{index + 1}</td>
                            <td
                                className="project-name-link"
                                onClick={() => handleViewProjectDetail(project.project_name || '')}
                            >
                                {project.project_name || 'N/A'}
                            </td>
                            <td>{project.description || 'Kh√¥ng x√°c ƒë·ªãnh'}</td>
                            <td>{`${project.start_date || 'Kh√¥ng x√°c ƒë·ªãnh'} - ${project.end_date || 'Kh√¥ng x√°c ƒë·ªãnh'}`}</td>
                            <td>{project.status || 'Kh√¥ng x√°c ƒë·ªãnh'}</td>
                            <td>{project.manager || 'Kh√¥ng x√°c ƒë·ªãnh'}</td>
                            <td>
                                <button className="edit-btn" onClick={() => handleViewProjectDetail(project.project_name || '')}>
                                    ‚úèÔ∏è
                                </button>
                                <button className="delete-btn" onClick={() => handleDeleteProject(project.project_name || '')}>
                                    üóëÔ∏è
                                </button>
                            </td>
                        </tr>
                    ))}
                </tbody>
            </table>
        </div>
    );
};

export default ProjectManagement;