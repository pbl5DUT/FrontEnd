import { createProject } from './project_service';
import { createNewChatRoom } from '../../chat-room/services/chatApi';
import { Project, ProjectFormData } from '../types/project';

/**
 * T·∫°o project v√† chatroom li√™n quan v·ªõi c√πng t√™n v√† th√†nh vi√™n
 */
export const createProjectWithChatRoom = async (projectData: ProjectFormData): Promise<Project> => {
  try {
    console.log('üîÑ Creating project with chat room...', projectData);
    
    // 1. T·∫°o project tr∆∞·ªõc
    const newProject = await createProject(projectData);
    console.log('‚úÖ Project created successfully:', newProject);

    // 2. Chu·∫©n b·ªã danh s√°ch ng∆∞·ªùi tham gia cho chatroom
    // Bao g·ªìm manager v√† t·∫•t c·∫£ th√†nh vi√™n c·ªßa project
    const participantIds: number[] = [];
    
    // Th√™m manager v√†o danh s√°ch (chuy·ªÉn string sang number)
    const managerId = parseInt(projectData.manager_id, 10);
    if (!isNaN(managerId)) {
      participantIds.push(managerId);
    }

    // Th√™m c√°c th√†nh vi√™n kh√°c v√†o danh s√°ch (n·∫øu c√≥)
    if (projectData.members && Array.isArray(projectData.members)) {
      projectData.members.forEach(member => {
        const memberId = parseInt(member.user_id, 10);
        if (!isNaN(memberId) && !participantIds.includes(memberId)) {
          participantIds.push(memberId);
        }
      });
    }

    // 3. T·∫°o chatroom v·ªõi c√πng t√™n v√† th√†nh vi√™n nh∆∞ project
    if (participantIds.length > 0) {
      await createNewChatRoom({
        name: `Project: ${projectData.project_name}`,
        participantIds: participantIds,
        isDirectChat: false // Ph√≤ng chat nh√≥m, kh√¥ng ph·∫£i chat ri√™ng t∆∞
      });
      
      console.log(`Chat room created for project: ${projectData.project_name}`);
    } else {
      console.warn(`No participants found for project: ${projectData.project_name}`);
    }

    // 4. Tr·∫£ v·ªÅ th√¥ng tin project ƒë√£ t·∫°o
    return newProject;
  } catch (error) {
    console.error('Error creating project with chat room:', error);
    throw error;
  }
};
